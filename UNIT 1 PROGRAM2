 
ANSWER 2:-
Algorithm:
1.	Start with an array of unsorted numbers
2.	Define a function called “bubbleSort” that takes in the array and the length of the array as parameters
3.	In the function, create a variable called “sorted” that is set to true
4.	Create a for loop that iterates through the array starting at index 0 and ending at the length of the array -1
5.	Within the for loop, compare the current element with the next element in the array
6.	If the current element is greater than the next element, swap their positions and set “sorted” to false
7.	After the for loop, check if “sorted” is false
8.	If “sorted” is false, call the “bubbleSort” function again with the same array and length as parameters
9.	If “sorted” is true, the array is now sorted and the function will return the sorted array
10.	Call the “bubbleSort” function with the initial unsorted array and its length as parameters to begin the sorting process.
Below is the implementation of the above approach: 

begin BubbleSort(list)

for all elements of list
      if list[i] > list[i+1]
         swap(list[i], list[i+1])
      end if
   end for
   
   return list
   
end BubbleSort
